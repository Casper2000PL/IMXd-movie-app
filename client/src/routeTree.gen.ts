/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as AddContentRouteImport } from './routes/add-content'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as RegisterSignUpRouteImport } from './routes/register/sign-up'
import { Route as RegisterSignInRouteImport } from './routes/register/sign-in'
import { Route as ProfileProfileIdIndexRouteImport } from './routes/profile/$profileId/index'
import { Route as ContentContentIdIndexRouteImport } from './routes/content/$contentId/index'
import { Route as ProfileProfileIdSettingsRouteImport } from './routes/profile/$profileId/settings'
import { Route as ProfileProfileIdEditProfileRouteImport } from './routes/profile/$profileId/edit-profile'
import { Route as ContentContentIdSettingsRouteImport } from './routes/content/$contentId/settings'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AddContentRoute = AddContentRouteImport.update({
  id: '/add-content',
  path: '/add-content',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RegisterRoute,
} as any)
const RegisterSignUpRoute = RegisterSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => RegisterRoute,
} as any)
const RegisterSignInRoute = RegisterSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => RegisterRoute,
} as any)
const ProfileProfileIdIndexRoute = ProfileProfileIdIndexRouteImport.update({
  id: '/profile/$profileId/',
  path: '/profile/$profileId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContentContentIdIndexRoute = ContentContentIdIndexRouteImport.update({
  id: '/content/$contentId/',
  path: '/content/$contentId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileProfileIdSettingsRoute =
  ProfileProfileIdSettingsRouteImport.update({
    id: '/profile/$profileId/settings',
    path: '/profile/$profileId/settings',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProfileProfileIdEditProfileRoute =
  ProfileProfileIdEditProfileRouteImport.update({
    id: '/profile/$profileId/edit-profile',
    path: '/profile/$profileId/edit-profile',
    getParentRoute: () => rootRouteImport,
  } as any)
const ContentContentIdSettingsRoute =
  ContentContentIdSettingsRouteImport.update({
    id: '/content/$contentId/settings',
    path: '/content/$contentId/settings',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add-content': typeof AddContentRoute
  '/register': typeof RegisterRouteWithChildren
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register/': typeof RegisterIndexRoute
  '/content/$contentId/settings': typeof ContentContentIdSettingsRoute
  '/profile/$profileId/edit-profile': typeof ProfileProfileIdEditProfileRoute
  '/profile/$profileId/settings': typeof ProfileProfileIdSettingsRoute
  '/content/$contentId': typeof ContentContentIdIndexRoute
  '/profile/$profileId': typeof ProfileProfileIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add-content': typeof AddContentRoute
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register': typeof RegisterIndexRoute
  '/content/$contentId/settings': typeof ContentContentIdSettingsRoute
  '/profile/$profileId/edit-profile': typeof ProfileProfileIdEditProfileRoute
  '/profile/$profileId/settings': typeof ProfileProfileIdSettingsRoute
  '/content/$contentId': typeof ContentContentIdIndexRoute
  '/profile/$profileId': typeof ProfileProfileIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add-content': typeof AddContentRoute
  '/register': typeof RegisterRouteWithChildren
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register/': typeof RegisterIndexRoute
  '/content/$contentId/settings': typeof ContentContentIdSettingsRoute
  '/profile/$profileId/edit-profile': typeof ProfileProfileIdEditProfileRoute
  '/profile/$profileId/settings': typeof ProfileProfileIdSettingsRoute
  '/content/$contentId/': typeof ContentContentIdIndexRoute
  '/profile/$profileId/': typeof ProfileProfileIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/add-content'
    | '/register'
    | '/register/sign-in'
    | '/register/sign-up'
    | '/register/'
    | '/content/$contentId/settings'
    | '/profile/$profileId/edit-profile'
    | '/profile/$profileId/settings'
    | '/content/$contentId'
    | '/profile/$profileId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/add-content'
    | '/register/sign-in'
    | '/register/sign-up'
    | '/register'
    | '/content/$contentId/settings'
    | '/profile/$profileId/edit-profile'
    | '/profile/$profileId/settings'
    | '/content/$contentId'
    | '/profile/$profileId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/add-content'
    | '/register'
    | '/register/sign-in'
    | '/register/sign-up'
    | '/register/'
    | '/content/$contentId/settings'
    | '/profile/$profileId/edit-profile'
    | '/profile/$profileId/settings'
    | '/content/$contentId/'
    | '/profile/$profileId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AddContentRoute: typeof AddContentRoute
  RegisterRoute: typeof RegisterRouteWithChildren
  ContentContentIdSettingsRoute: typeof ContentContentIdSettingsRoute
  ProfileProfileIdEditProfileRoute: typeof ProfileProfileIdEditProfileRoute
  ProfileProfileIdSettingsRoute: typeof ProfileProfileIdSettingsRoute
  ContentContentIdIndexRoute: typeof ContentContentIdIndexRoute
  ProfileProfileIdIndexRoute: typeof ProfileProfileIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-content': {
      id: '/add-content'
      path: '/add-content'
      fullPath: '/add-content'
      preLoaderRoute: typeof AddContentRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/'
      fullPath: '/register/'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof RegisterRoute
    }
    '/register/sign-up': {
      id: '/register/sign-up'
      path: '/sign-up'
      fullPath: '/register/sign-up'
      preLoaderRoute: typeof RegisterSignUpRouteImport
      parentRoute: typeof RegisterRoute
    }
    '/register/sign-in': {
      id: '/register/sign-in'
      path: '/sign-in'
      fullPath: '/register/sign-in'
      preLoaderRoute: typeof RegisterSignInRouteImport
      parentRoute: typeof RegisterRoute
    }
    '/profile/$profileId/': {
      id: '/profile/$profileId/'
      path: '/profile/$profileId'
      fullPath: '/profile/$profileId'
      preLoaderRoute: typeof ProfileProfileIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/$contentId/': {
      id: '/content/$contentId/'
      path: '/content/$contentId'
      fullPath: '/content/$contentId'
      preLoaderRoute: typeof ContentContentIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$profileId/settings': {
      id: '/profile/$profileId/settings'
      path: '/profile/$profileId/settings'
      fullPath: '/profile/$profileId/settings'
      preLoaderRoute: typeof ProfileProfileIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$profileId/edit-profile': {
      id: '/profile/$profileId/edit-profile'
      path: '/profile/$profileId/edit-profile'
      fullPath: '/profile/$profileId/edit-profile'
      preLoaderRoute: typeof ProfileProfileIdEditProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/content/$contentId/settings': {
      id: '/content/$contentId/settings'
      path: '/content/$contentId/settings'
      fullPath: '/content/$contentId/settings'
      preLoaderRoute: typeof ContentContentIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface RegisterRouteChildren {
  RegisterSignInRoute: typeof RegisterSignInRoute
  RegisterSignUpRoute: typeof RegisterSignUpRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const RegisterRouteChildren: RegisterRouteChildren = {
  RegisterSignInRoute: RegisterSignInRoute,
  RegisterSignUpRoute: RegisterSignUpRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

const RegisterRouteWithChildren = RegisterRoute._addFileChildren(
  RegisterRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AddContentRoute: AddContentRoute,
  RegisterRoute: RegisterRouteWithChildren,
  ContentContentIdSettingsRoute: ContentContentIdSettingsRoute,
  ProfileProfileIdEditProfileRoute: ProfileProfileIdEditProfileRoute,
  ProfileProfileIdSettingsRoute: ProfileProfileIdSettingsRoute,
  ContentContentIdIndexRoute: ContentContentIdIndexRoute,
  ProfileProfileIdIndexRoute: ProfileProfileIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
