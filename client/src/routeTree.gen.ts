/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as RegisterSignUpRouteImport } from './routes/register/sign-up'
import { Route as RegisterSignInRouteImport } from './routes/register/sign-in'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RegisterRoute,
} as any)
const RegisterSignUpRoute = RegisterSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => RegisterRoute,
} as any)
const RegisterSignInRoute = RegisterSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => RegisterRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/register': typeof RegisterRouteWithChildren
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register/': typeof RegisterIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register': typeof RegisterIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/register': typeof RegisterRouteWithChildren
  '/register/sign-in': typeof RegisterSignInRoute
  '/register/sign-up': typeof RegisterSignUpRoute
  '/register/': typeof RegisterIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/register'
    | '/register/sign-in'
    | '/register/sign-up'
    | '/register/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/register/sign-in' | '/register/sign-up' | '/register'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/register'
    | '/register/sign-in'
    | '/register/sign-up'
    | '/register/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  RegisterRoute: typeof RegisterRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/'
      fullPath: '/register/'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof RegisterRoute
    }
    '/register/sign-up': {
      id: '/register/sign-up'
      path: '/sign-up'
      fullPath: '/register/sign-up'
      preLoaderRoute: typeof RegisterSignUpRouteImport
      parentRoute: typeof RegisterRoute
    }
    '/register/sign-in': {
      id: '/register/sign-in'
      path: '/sign-in'
      fullPath: '/register/sign-in'
      preLoaderRoute: typeof RegisterSignInRouteImport
      parentRoute: typeof RegisterRoute
    }
  }
}

interface RegisterRouteChildren {
  RegisterSignInRoute: typeof RegisterSignInRoute
  RegisterSignUpRoute: typeof RegisterSignUpRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const RegisterRouteChildren: RegisterRouteChildren = {
  RegisterSignInRoute: RegisterSignInRoute,
  RegisterSignUpRoute: RegisterSignUpRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

const RegisterRouteWithChildren = RegisterRoute._addFileChildren(
  RegisterRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  RegisterRoute: RegisterRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
